const usernameDisply=document.getElementById('username-display');
const usernameInput = document.getElementById('username-input');
const loginBtn = document.getElementById('login-btn');

const showResultsBtn = document.getElementById('show-results-btn');
const modalContainer=document.getElementById('modal-container');
const closeModalBtn = document.getElementById('close-modal-btn');
const resultText = document.getElementById('result-text');


const situationSection = document.getElementById('situation');
const player1Section = document.getElementById('player1');
const player2Section = document.getElementById('player2');
const resultSection = document.getElementById('result');
const gameStartSection=document.getElementById('game-start');
const gameSection=document.getElementById('game-section');

const memeContainer1 = document.getElementById('meme-container1');
const generateBtn1 = document.getElementById('generate-btn1');
const battleBtn1 = document.getElementById('battle-btn1');

let player1Meme = '';
let player1Username='';


const memeContainer2 = document.getElementById('meme-container2');
const generateBtn2  = document.getElementById('generate-btn2');
const battleBtn2 = document.getElementById('battle-btn2');

let player2Meme = '';
let player2Username = ' ';

let player1Name=document.getElementById('player1-username-display');
let player2Name=document.getElementById('player2-username-display');











function startGame() {

    
    gameStartSection.style.display='block';
    //generate memes for both players
    generateMemeforPlayer1(1);
    generateMemeforPlayer(2);
    setTimeout(startBattle,5000);
    initializeGame();
    setTimeout(restartGame, 20000); 
    
}



function startBattle(){
    gameStartSection.style.display='none';
    gameStartSection.style.display='block';
    
}
     

  
showResultsBtn.addEventListener('click',openModal);
closeModalBtn.addEventListener('click',closeModal);

function openModal(results){
    resultText.textContent=results;
    modalContainer.style.display='block';
}

function closeModal(){
    modalContainer.style.display='none';
}
     

  

    
   
function generateMeme(memes){
    const memeCount = 20;
    const randomIndex=Math.floor(Math.random()*memeCount)+1;
    const fileExtensions=['.jpg','.jpeg','.png'];
    const randomExtension = fileExtensions[Math.floor(Math.random()*fileExtensions.length)];
    const imagePath = `./${memes}/${randomIndex}${randomExtension}`;
    return imagePath;

}



function initializeGame() {
    const situationText = document.getElementById('situation-text');

    const situations = [
        'When you see a funny meme while drinking water',
        'When your favorite song comes on the radio',
        'When you find money in your pocket',
        'When you accidently send a text to the wrong person',
        'When you wake up and realize it is Monday',
        'When you win an argument on the internet',
        'When you receive unexpected praise for your work',
        'When you remember a hilarious inside joke with your friends',
        'When you accidentally overhear someone talking about you in a positive way',
        'When you see a cute animal doing something funny',
        'When you receive a surprise gift from someone special',
        'When you successfully navigate through a crowded place without bumping into anyone',
        'When you discover a hidden gem of a song or movie',
        'When you successfully catch something that you dropped without it breaking',
        'When you witness a hilarious fail or blooper in real life',
        'When you win a game or competition by a landslide',
    ];
    const updateSituation = () =>{  
         const randomIndex=Math.floor(Math.random()*situations.length);
         const currentSituation = situations[randomIndex];
         situationText.textContent = currentSituation;
    };
    
    updateSituation();
    setInterval(updateSituation,20000);

    generateBtn1.addEventListener('click',async()=>{
        if(!player1Username)
           
        player1Meme=generateMeme('memes/player1');
        if (player1Meme){
            memeContainer1.innerHTML=`<img src="${player1Meme}" alt="Meme generated by Player 1"style="width:300px; height:auto;">`;
        }
    });
    battleBtn1.addEventListener('click', () => {
        if (!player2Username){
            alert('Player2 must log in first!');
            return;
        }
        if(!player1Meme){
            alert('Player1 must generate a meme first!!');
            return;
        }
        
        compareMemes(player1Meme,player2Meme);
        
    });

    generateBtn2.addEventListener('click',()=>{
        player2Meme =  generateMeme('memes/player2');
        if(player2Meme){
            memeContainer2.innerHTML=`<img src="${player2Meme}" alt="Meme generated by Player 2" style="width: 300px; height:auto;">`;
        }    
    });
    battleBtn2.addEventListener('click', () => {
        if (!player2Meme){
            alert('Player 2 must generate a meme first!');
            return;
        
        }
        compareMemes(player1Meme,player2Meme);
    });
}
let player1MemeCount=0;
let player2MemeCount=0;
tieCount=0;


function calculateSimilarity(meme1, meme2) {
    // Implement your similarity calculation logic here
    // For example, using Levenshtein distance algorithm
    const distance = levenshteinDistance(meme1, meme2);
    const similarity = 1 - distance / Math.max(meme1.length, meme2.length);
    return similarity;
}

// Helper function to calculate Levenshtein distance between two strings
function levenshteinDistance(str1, str2) {
    const m = str1.length;
    const n = str2.length;
    const dp = Array.from({ length: m + 1 }, () => Array(n + 1).fill(0));

    for (let i = 0; i <= m; i++) {
        dp[i][0] = i;
    }

    for (let j = 0; j <= n; j++) {
        dp[0][j] = j;
    }

    for (let i = 1; i <= m; i++) {
        for (let j = 1; j <= n; j++) {
            if (str1[i - 1] === str2[j - 1]) {
                dp[i][j] = dp[i - 1][j - 1];
            } else {
                dp[i][j] = Math.min(
                    dp[i - 1][j - 1] + 1, // substitution
                    dp[i][j - 1] + 1,     // insertion
                    dp[i - 1][j] + 1      // deletion
                );
            }
        }
    }

    return dp[m][n];
}




function compareMemes(meme1,meme2){
    const situationText = document.getElementById('situation-text').textContent;

    const similarity1 = calculateSimilarity(meme1,situationText);
    const similarity2 = calculateSimilarity(meme2, situationText);

    let resultMessage='';




    if(similarity1>similarity2){
        //player 1 wins
        player1MemeCount++;
        resultMessage='Warrior Alpha wins!';
    }else if (similarity2 > similarity1){
        //player 2 wins
        player2MemeCount++;
        resultMessage = 'Warrior Beta wins!';
    }else{
        tieCount++;
        resultMessage = 'Its a tie';
    }
    
    //Update the score display
    updateScoreDisplay();
    if(player1MemeCount >= 5|| player2MemeCount >=5){
        


        openModal(resultMessage);
        disableButtons();
        setTimeout(restartGame,10000);
    }else{
        memeContainer1.innerHTML='';
        memeContainer2.innerHTML='';
        player1Meme = '';
        player2Meme = '';
    }


}
 function updateScoreDisplay(){

    const player1Score = document.getElementById('player1-score');
    const player2Score = document.getElementById('player2-score');

    player1Score.textContent = `Memes generated: ${player1MemeCount}`;
    player2Score.textContent = `Memes generated: ${player2MemeCount}`;

 }

function disableButtons() {
    generateBtn1.disabled = true;
    battleBtn1.disabled = true;
    generateBtn2.disabled = true;
    battleBtn2.disabled = true;

}

function restartGame(){

    player1MemeCount = 0;
    player2MemeCount = 0;
    tieCount = 0;
    updateScoreDisplay();
    
    enableButtons();

    
    

     // Restart game after 2 seconds



}


function enableButtons() {
    generateBtn1.disabled = false;
    battleBtn1.disabled = false;
    generateBtn2.disabled = false;
    battleBtn2.disabled = false;
}

      // call initializeGame() here to stRT THE GAME
      initializeGame();














